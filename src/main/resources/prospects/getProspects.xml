<!--
   Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.

   WSO2 Inc. licenses this file to you under the Apache License,
   Version 2.0 (the "License"); you may not use this file except
   in compliance with the License.
   You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied. See the License for the
   specific language governing permissions and limitations
   under the License.
-->
<template xmlns="http://ws.apache.org/ns/synapse" name="getProspects">
    <parameter name="createdAfter" description="Selects prospects that were created after the specified time."/>
    <parameter name="createdBefore" description="Selects prospects that were created before the specified time."/>
    <parameter name="idGreaterThan" description="Selects prospects with IDs greater than the specified integer."/>
    <parameter name="idLessThan" description="Selects prospects with IDs less than the specified integer."/>
    <parameter name="assigned" description="Selects prospects based on whether they are assigned."/>
    <parameter name="assignedToUser" description="Selects prospects based on whether they are assigned to a specified user."/>
    <parameter name="deleted" description="Selects prospects based on whether they have been deleted.Default value: false."/>
    <parameter name="gradeEqualTo" description="Selects prospects that have a grade equal to the specified grade."/>
    <parameter name="gradeGreaterThan" description="Selects prospects that have a grade greater than the specified grade."/>
    <parameter name="gradeLessThan" description="Selects prospects that have a grade less than the specified grade."/>
    <parameter name="isStarred" description="Selects prospects based on whether they are starred."/>
    <parameter name="lastActivityBefore" description="Selects prospects that have been active before the specified time."/>
    <parameter name="lastActivityAfter" description="Selects prospects that have been active after the specified time."/>
    <parameter name="lastActivityNever" description="Selects prospects that have never been active."/>
    <parameter name="listId" description="Selects prospects based on their membership of the list with the given list id."/>
    <parameter name="new" description="Selects prospects based on whether they are classified as new."/>
    <parameter name="scoreEqualTo" description="Selects prospects that have a score equal to a specified integer."/>
    <parameter name="scoreGreaterThan" description="Selects prospects that have a score greater than a specified integer."/>
    <parameter name="scoreLessThan" description="Selects prospects that have a score less than a specified integer."/>
    <parameter name="updatedAfter" description="Selects prospects that were last updated after the specified time."/>
    <parameter name="updatedBefore" description="Selects prospects that were last updated before the specified time."/>
    <parameter name="limit" description="Specifies the number of results to be returned."/>
    <parameter name="offset" description="Specifies the first matching prospect to be returned in the query response."/>
    <parameter name="sortBy" description="Specifies the field that should be used to sort the results of the query."/>
    <parameter name="sortOrder" description="Specifies the ordering to be used when sorting the results of the query."/>
    <parameter name="output" description="Specifies the format to be used when returning the results of the query."/>
    <parameter name="fields" description="Specifies the fields to be returned."/>
    <sequence>
        <property name="uri.var.createdAfter" expression="$func:createdAfter"/>
        <property name="uri.var.createdBefore" expression="$func:createdBefore"/>
        <property name="uri.var.idGreaterThan" expression="$func:idGreaterThan"/>
        <property name="uri.var.idLessThan" expression="$func:idLessThan"/>
        <property name="uri.var.assigned" expression="$func:assigned"/>
        <property name="uri.var.assignedToUser" expression="$func:assignedToUser"/>
        <property name="uri.var.deleted" expression="$func:deleted"/>
        <property name="uri.var.gradeEqualTo" expression="$func:gradeEqualTo"/>
        <property name="uri.var.gradeGreaterThan" expression="$func:gradeGreaterThan"/>
        <property name="uri.var.gradeLessThan" expression="$func:gradeLessThan"/>
        <property name="uri.var.isStarred" expression="$func:isStarred"/>
        <property name="uri.var.lastActivityBefore" expression="$func:lastActivityBefore"/>
        <property name="uri.var.lastActivityAfter" expression="$func:lastActivityAfter"/>
        <property name="uri.var.lastActivityNever" expression="$func:lastActivityNever"/>
        <property name="uri.var.listId" expression="$func:listId"/>
        <property name="uri.var.new" expression="$func:new"/>
        <property name="uri.var.scoreEqualTo" expression="$func:scoreEqualTo"/>
        <property name="uri.var.scoreGreaterThan" expression="$func:scoreGreaterThan"/>
        <property name="uri.var.scoreLessThan" expression="$func:scoreLessThan"/>
        <property name="uri.var.updatedAfter" expression="$func:updatedAfter"/>
        <property name="uri.var.updatedBefore" expression="$func:updatedBefore"/>
        <property name="uri.var.limit" expression="$func:limit"/>
        <property name="uri.var.offset" expression="$func:offset"/>
        <property name="uri.var.sortBy" expression="$func:sortBy"/>
        <property name="uri.var.sortOrder" expression="$func:sortOrder"/>
        <property name="uri.var.output" expression="$func:output"/>
        <property name="uri.var.fields" expression="$func:fields"/>
        <script language="js">
            <![CDATA[
                var createdAfter=mc.getProperty("uri.var.createdAfter");
                var createdBefore=mc.getProperty("uri.var.createdBefore");
                var idGreaterThan = mc.getProperty("uri.var.idGreaterThan");
                var idLessThan = mc.getProperty("uri.var.idLessThan");
                var assigned=mc.getProperty("uri.var.assigned");
                var assignedToUser=mc.getProperty("uri.var.assignedToUser");
                var deleted = mc.getProperty("uri.var.deleted");
                var gradeEqualTo = mc.getProperty("uri.var.gradeEqualTo");
                var gradeGreaterThan=mc.getProperty("uri.var.gradeGreaterThan");
                var gradeLessThan=mc.getProperty("uri.var.gradeLessThan");
                var isStarred = mc.getProperty("uri.var.isStarred");
                var lastActivityBefore = mc.getProperty("uri.var.lastActivityBefore");
                var lastActivityAfter=mc.getProperty("uri.var.lastActivityAfter");
                var lastActivityNever=mc.getProperty("uri.var.lastActivityNever");
                var listId = mc.getProperty("uri.var.listId");
                var newVar = mc.getProperty("uri.var.new");
                var scoreEqualTo=mc.getProperty("uri.var.scoreEqualTo");
                var scoreGreaterThan=mc.getProperty("uri.var.scoreGreaterThan");
                var scoreLessThan = mc.getProperty("uri.var.scoreLessThan");
                var updatedAfter = mc.getProperty("uri.var.updatedAfter");
                var updatedBefore=mc.getProperty("uri.var.updatedBefore");
                var limit = mc.getProperty("uri.var.limit");
                var offset = mc.getProperty("uri.var.offset");
                var sortBy = mc.getProperty("uri.var.sortBy");
                var sortOrder = mc.getProperty("uri.var.sortOrder");
                var output = mc.getProperty("uri.var.output");
                var fields = mc.getProperty("uri.var.fields");
                var format=mc.getProperty("uri.var.format");

                var urlQuery = '';
                if (createdAfter != null && createdAfter != ""){
                   urlQuery += 'created_after=' + createdAfter + '&';
                }
                if (createdBefore != null && createdBefore != ""){
                   urlQuery += 'created_before=' + createdBefore + '&';
                }
                if (idGreaterThan != null && idGreaterThan != ""){
                   urlQuery += 'id_greater_than=' + idGreaterThan + '&';
                }
                if (idLessThan != null && idLessThan != ""){
                   urlQuery += 'id_less_than=' + idLessThan + '&';
                }
                if (assigned != null && assigned != ""){
                   urlQuery += 'assigned=' + assigned + '&';
                }
                if (assignedToUser != null && assignedToUser != ""){
                   urlQuery += 'assigned_to_user=' + assignedToUser + '&';
                }
                if (deleted != null && deleted != ""){
                   urlQuery += 'deleted=' + deleted + '&';
                }
                if (gradeEqualTo != null && gradeEqualTo != ""){
                   urlQuery += 'grade_equal_to=' + gradeEqualTo + '&';
                }
                if (gradeGreaterThan != null && gradeGreaterThan != ""){
                   urlQuery += 'grade_greater_than=' + gradeGreaterThan + '&';
                }
                if (gradeLessThan != null && gradeLessThan != ""){
                   urlQuery += 'grade_less_than=' + gradeLessThan + '&';
                }
                if (isStarred != null && isStarred != ""){
                   urlQuery += 'is_starred=' + isStarred + '&';
                }
                if (lastActivityBefore != null && lastActivityBefore != ""){
                   urlQuery += 'last_activity_before=' + lastActivityBefore + '&';
                }
                if (lastActivityAfter != null && lastActivityAfter != ""){
                   urlQuery += 'last_activity_after=' + lastActivityAfter + '&';
                }
                if (lastActivityNever != null && lastActivityNever != ""){
                   urlQuery += 'last_activity_never=' + lastActivityNever + '&';
                }
                if (listId != null && listId != ""){
                   urlQuery += 'list_id=' + listId + '&';
                }
                if (newVar != null && newVar != ""){
                   urlQuery += 'new=' + newVar + '&';
                }
                if (scoreEqualTo != null && scoreEqualTo != ""){
                   urlQuery += 'score_equal_to=' + scoreEqualTo + '&';
                }
                if (scoreEqualTo != null && scoreEqualTo != ""){
                   urlQuery += 'score_equal_to=' + scoreEqualTo + '&';
                }
                if (scoreGreaterThan != null && scoreGreaterThan != ""){
                   urlQuery += 'score_greater_than=' + scoreGreaterThan + '&';
                }
                if (scoreLessThan != null && scoreLessThan != ""){
                   urlQuery += 'score_less_than=' + scoreLessThan + '&';
                }
                if (updatedAfter != null && updatedAfter != ""){
                   urlQuery += 'updated_after=' + updatedAfter + '&';
                }
                if (updatedBefore != null && updatedBefore != ""){
                   urlQuery += 'updated_before=' + updatedBefore + '&';
                }
                if (limit != null && limit != ""){
                   urlQuery += 'limit=' + limit + '&';
                }
                if (offset != null && offset != ""){
                   urlQuery += 'offset=' + offset + '&';
                }
                if (sortBy != null && sortBy != ""){
                   urlQuery += 'sort_by=' + sortBy + '&';
                }
                if (sortOrder != null && sortOrder != ""){
                   urlQuery += 'sort_order=' + sortOrder + '&';
                }
                if (output != null && output != ""){
                   urlQuery += 'output=' + output + '&';
                }
                if (fields != null && fields != ""){
                   var fieldsArray = eval( "('" + fields + "')" );
                   urlQuery += 'fields=' + fieldsArray + '&';
                }
                if (format != null && format != ""){
                   urlQuery += 'format=' + format + '&';;
                }
                if (urlQuery != null && urlQuery != ""){
                   urlQuery = '&' + urlQuery.toString().substring(0, urlQuery.toString().lastIndexOf("&"));
                }
                mc.setProperty('uri.var.urlQuery',urlQuery);
            ]]>
        </script>
        <filter source="$ctx:pardotBlocking" regex="true">
            <then>
                <call blocking="true">
                    <endpoint>
                        <http method="get"
                              uri-template="{uri.var.apiUrl}/prospect/version/{uri.var.apiVersion}/do/query?api_key={+uri.var.apiKey}&amp;user_key={+uri.var.userKey}{+uri.var.urlQuery}"/>
                    </endpoint>
                </call>
            </then>
            <else>
                <call>
                    <endpoint>
                        <http method="get"
                              uri-template="{uri.var.apiUrl}/prospect/version/{uri.var.apiVersion}/do/query?api_key={+uri.var.apiKey}&amp;user_key={+uri.var.userKey}{+uri.var.urlQuery}"/>
                    </endpoint>
                </call>
            </else>
        </filter>
    </sequence>
</template>